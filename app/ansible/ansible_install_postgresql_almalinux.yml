---
- name: PostgreSQL installation for AlmaLinux
  hosts: almalinux
  become: true

  vars:
    pgdata: /var/lib/pgsql/13/data
    socket_dir: /var/run/postgresql
    pg_conf: "/var/lib/pgsql/13/data/postgresql.conf"
    pg_port: 5432
    db_user: "student"
    db_password: "studentpass"
    allowed_ip: ""

  tasks:
    - name: Install PostgreSQL
      ansible.builtin.dnf:
        name:
          - postgresql-server-13.20
          - python3-psycopg2
        state: present
        use_backend: dnf4
    
    - name: Create a folder for DB data
      ansible.builtin.file:
        path: "{{ pgdata }}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0700'

    - name: Create a folder for PostgreSQL sockets
      ansible.builtin.file:
        path: "{{ socket_dir }}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0750'

    - name: Initialize the DB cluster
      ansible.builtin.command: "sudo -u postgres initdb -D {{ pgdata }}"

    - name: Change unix_socket_directories in postgresql.conf
      ansible.builtin.lineinfile:
        path: "{{ pgdata }}/postgresql.conf"
        regexp: '^#?unix_socket_directories =.*'
        line: "unix_socket_directories = '{{ socket_dir }}'"
        state: present
        owner: postgres
        group: postgres

    - name: Change listen_addresses in postgresql.conf
      ansible.builtin.lineinfile:
        path: "{{ pg_conf }}"
        regexp: "^#?(listen_addresses\\s*=\\s*).*$"
        line: "listen_addresses = '*'"
        owner: postgres
        group: postgres
        mode: '0644'
      notify: Restart PostgreSQL

    - name: Check listen_addresses in postgresql.conf
      ansible.builtin.shell: "grep listen_addresses {{ pg_conf }}"
      register: listen_addresses_check
      changed_when: false

    - name: listen_addresses in postgresql.conf
      ansible.builtin.debug:
        var: listen_addresses_check.stdout

    - name: Start PostgreSQL
      ansible.builtin.command: >
        pg_ctl -D {{ pgdata }} start
      become: true
      become_user: postgres
      args:
        chdir: /var/lib/pgsql

    - name: Check the database readiness for operation
      ansible.builtin.wait_for:
        port: 5432
        host: "{{ ansible_host }}"
        timeout: 30

    - name: Create DB user
      community.postgresql.postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        role_attr_flags: "CREATEDB,CREATEROLE,LOGIN"
        login_user: postgres
        login_password: ""
        login_host: localhost
      become_user: postgres

    - name: Add access rule to second server
      ansible.builtin.lineinfile:
        path: "{{ pgdata }}/pg_hba.conf"
        regexp: '^host\s+all\s+{{ db_user }}\s+{{ allowed_ip }}/32\s+md5\s*$'
        line: "host all {{ db_user }} {{ allowed_ip }}/32 md5"
        owner: postgres
        group: postgres
        mode: '0640'
        state: present
      notify: Restart PostgreSQL
    
    - name: The first server is ready to accept external connections
      ansible.builtin.command: >
        echo ""
      changed_when: false

  handlers:
    - name: Restart PostgreSQL
      ansible.builtin.command: "sudo -u postgres pg_ctl -D {{ pgdata }} -W restart"
      register: pg_restart_result
      changed_when: true
      ignore_errors: true
      failed_when: false

    - name: Show restart result
      ansible.builtin.debug:
        var: pg_restart_result.stdout
      when: pg_restart_result is defined
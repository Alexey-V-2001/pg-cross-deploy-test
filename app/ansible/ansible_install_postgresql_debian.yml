---
- name: PostgreSQL installation for Debian
  hosts: debian
  become: true

  vars:
    pgdata: /var/lib/pgsql/13/data
    socket_dir: /var/run/postgresql
    pg_conf: "/var/lib/pgsql/13/data/postgresql.conf"
    pg_port: 5432
    db_user: "student"
    db_password: "studentpass"
    allowed_ip: ""

  tasks:
    - name: Install PostgreSQL
      ansible.builtin.apt:
        name:
          - postgresql-15
          - python3-psycopg2
        state: present

    - name: Create a folder for DB data (Debian default location)
      ansible.builtin.file:
        path: "{{ pgdata | default('/var/lib/postgresql/{{ postgresql_version }}/main') }}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0700'
      when: custom_data_dir_required | default(false)

    - name: Create a folder for PostgreSQL sockets
      ansible.builtin.file:
        path: "{{ socket_dir }}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0750'

    - name: Initialize DB cluster
      ansible.builtin.command: "sudo -u postgres /usr/lib/postgresql/{{ postgresql_version }}/bin/initdb -D {{ pgdata }}"
      args:
        creates: "{{ pgdata }}/PG_VERSION"
      when: custom_init_required | default(false)

    - name: Change unix_socket_directories в конфиге
      ansible.builtin.lineinfile:
        path: "{{ pgdata }}/postgresql.conf"
        regexp: '^#?unix_socket_directories\s*=\s*.*'
        line: "unix_socket_directories = '{{ socket_dir }}'"
        state: present
        owner: postgres
        group: postgres
      notify: Restart PostgreSQL

    - name: Setting up listen_addresses
      ansible.builtin.lineinfile:
        path: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
        regexp: "^#?listen_addresses\\s*=\\s*.*$"
        line: "listen_addresses = '*'"
        owner: postgres
        group: postgres
        mode: '0644'
      notify: Restart PostgreSQL

    - name: Checking listen_addresses
      ansible.builtin.shell: "grep listen_addresses /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
      register: listen_addresses_check
      changed_when: false

    - name: Output listen_addresses
      ansible.builtin.debug:
        var: listen_addresses_check.stdout

    - name: Starting PostgreSQL
      ansible.builtin.systemd:
        name: postgresql
        state: started
        enabled: yes

    - name: Checking database availability
      ansible.builtin.wait_for:
        port: 5432
        host: "{{ ansible_host }}"
        timeout: 30

    - name: Creating DB user
      community.postgresql.postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        role_attr_flags: "CREATEDB,CREATEROLE,LOGIN"
        login_user: postgres
        login_password: ""
        login_host: localhost
      become_user: postgres

    - name: Adding an access rule
      ansible.builtin.lineinfile:
        path: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
        regexp: '^host\s+all\s+{{ db_user }}\s+{{ allowed_ip }}/32\s+md5\s*$'
        line: "host all {{ db_user }} {{ allowed_ip }}/32 md5"
        owner: postgres
        group: postgres
        mode: '0640'
        state: present
      notify: Restart PostgreSQL

    - name: The first server is ready to accept external connections
      ansible.builtin.command: >
        echo ""
      changed_when: false

  handlers:
    - name: Restart PostgreSQL
      ansible.builtin.systemd:
        name: postgresql
        state: restarted
      register: pg_restart_result

    - name: Show restart result
      ansible.builtin.debug:
        var: pg_restart_result
      when: pg_restart_result is defined


---
- name: Installing PostgreSQL on Debian
  hosts: debian
  become: true

  vars:
    pg_version: "15"
    pg_data: "/var/lib/pgsql/{{ pg_version }}/data"
    pg_socket_dir: /var/run/postgresql
    pg_port: 5432
    db_user: "student"
    db_password: "studentpass"
    allowed_ip: ""

  tasks:
    - name: Install PostgreSQL
      ansible.builtin.apt:
        name:
          - postgresql-{{ pg_version }}
          - python3-psycopg2
        state: present

    - name: Check if PostgreSQL sockets directory exists
      ansible.builtin.stat:
        path: "{{ pg_socket_dir }}"
      register: pg_socket_dir_stat

    - name: Create a folder for PostgreSQL sockets
      ansible.builtin.file:
        path: "{{ pg_socket_dir }}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0750'
      when: not (pg_socket_dir_stat.stat.exists and pg_socket_dir_stat.stat.isdir)

    - name: Check if PostgreSQL data directory exists
      ansible.builtin.stat:
        path: "{{ pg_data }}"
      register: pg_data_stat

    - name: Check for existing PostgreSQL data files
      ansible.builtin.find:
        paths: "{{ pg_data }}"
        file_type: file
      register: pg_data_files
      when: pg_data_stat.stat.exists and pg_data_stat.stat.isdir
    
    - name: Create a folder for PostgreSQL data
      ansible.builtin.file:
        path: "{{ pg_data }}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0750'
      when: pg_data_files is defined and (pg_data_files.files | default([]) | length == 0)

    - name: Initialize DB cluster
      ansible.builtin.command: "/usr/lib/postgresql/{{ pg_version }}/bin/initdb -D {{ pg_data }}"
      become: true
      become_user: postgres
      when: pg_data_files is defined and (pg_data_files.files | default([]) | length == 0)

    - name: Change unix_socket_directories in the config
      ansible.builtin.lineinfile:
        path: "{{ pg_data }}/postgresql.conf"
        regexp: '^#?unix_socket_directories\s*=\s*.*'
        line: "unix_socket_directories = '{{ pg_socket_dir }}'"
        state: present
        owner: postgres
        group: postgres

    - name: Setting up listen_addresses
      ansible.builtin.lineinfile:
        path: "/etc/postgresql/{{ pg_version }}/main/postgresql.conf"
        regexp: "^#?listen_addresses\\s*=\\s*.*$"
        line: "listen_addresses = '*'"
        owner: postgres
        group: postgres
        mode: '0644'

    - name: Adding access rule for the second server user
      ansible.builtin.lineinfile:
        path: "/etc/postgresql/{{ pg_version }}/main/pg_hba.conf"
        regexp: '^host\s+all\s+{{ db_user }}\s+{{ allowed_ip }}/32\s+md5\s*$'
        line: "host all {{ db_user }} {{ allowed_ip }}/32 md5"
        owner: postgres
        group: postgres
        mode: '0640'
        state: present

    - name: Starting PostgreSQL
      ansible.builtin.service:
        name: postgresql
        state: started
      become: yes

    - name: Checking database availability
      ansible.builtin.wait_for:
        host: "{{ ansible_host }}"
        port: "{{ pg_port }}"
        timeout: 30

    - name: Creating DB user
      community.postgresql.postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        role_attr_flags: "CREATEDB,CREATEROLE,LOGIN"
        login_user: postgres
      become_user: postgres

    - name: The first server is ready to accept external connections
      ansible.builtin.command: >
        echo ""
      changed_when: false

